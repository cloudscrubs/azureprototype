//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace CloudScrubsMobile.CS_Reference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WCFRole")]
    public partial class CompositeType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BoolValueField;
        
        private string StringValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TableServiceEntity", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.WindowsAzure.StorageClient")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CloudScrubsMobile.CS_Reference.GeneralHistory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CloudScrubsMobile.CS_Reference.AilmentDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CloudScrubsMobile.CS_Reference.BasicDetails))]
    public partial class TableServiceEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PartitionKeyField;
        
        private string RowKeyField;
        
        private System.DateTime TimestampField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RowKey {
            get {
                return this.RowKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.RowKeyField, value) != true)) {
                    this.RowKeyField = value;
                    this.RaisePropertyChanged("RowKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralHistory", Namespace="http://schemas.datacontract.org/2004/07/CloudScrubsStorage")]
    public partial class GeneralHistory : CloudScrubsMobile.CS_Reference.TableServiceEntity {
        
        private string AllergiesField;
        
        private int BMIField;
        
        private int BloodPressureField;
        
        private string BloodTypeField;
        
        private string ConditionsField;
        
        private int HeightField;
        
        private string OthersField;
        
        private string PatientIDLinkRowKeyField;
        
        private int WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Allergies {
            get {
                return this.AllergiesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllergiesField, value) != true)) {
                    this.AllergiesField = value;
                    this.RaisePropertyChanged("Allergies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BMI {
            get {
                return this.BMIField;
            }
            set {
                if ((this.BMIField.Equals(value) != true)) {
                    this.BMIField = value;
                    this.RaisePropertyChanged("BMI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BloodPressure {
            get {
                return this.BloodPressureField;
            }
            set {
                if ((this.BloodPressureField.Equals(value) != true)) {
                    this.BloodPressureField = value;
                    this.RaisePropertyChanged("BloodPressure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BloodType {
            get {
                return this.BloodTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BloodTypeField, value) != true)) {
                    this.BloodTypeField = value;
                    this.RaisePropertyChanged("BloodType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Conditions {
            get {
                return this.ConditionsField;
            }
            set {
                if ((object.ReferenceEquals(this.ConditionsField, value) != true)) {
                    this.ConditionsField = value;
                    this.RaisePropertyChanged("Conditions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Others {
            get {
                return this.OthersField;
            }
            set {
                if ((object.ReferenceEquals(this.OthersField, value) != true)) {
                    this.OthersField = value;
                    this.RaisePropertyChanged("Others");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientIDLinkRowKey {
            get {
                return this.PatientIDLinkRowKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIDLinkRowKeyField, value) != true)) {
                    this.PatientIDLinkRowKeyField = value;
                    this.RaisePropertyChanged("PatientIDLinkRowKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AilmentDetails", Namespace="http://schemas.datacontract.org/2004/07/CloudScrubsStorage")]
    public partial class AilmentDetails : CloudScrubsMobile.CS_Reference.TableServiceEntity {
        
        private string APField;
        
        private string AilmentDetailRowKeyField;
        
        private string DiagnosisField;
        
        private string GPField;
        
        private string HospitalField;
        
        private string Lab_PathologyField;
        
        private string Lab_PhysicalField;
        
        private string Lab_RadiologyField;
        
        private string MedicationField;
        
        private string PatientIDLinkRowKeyField;
        
        private string ProgressNotesField;
        
        private string SymptomsField;
        
        private System.DateTime TimeInField;
        
        private System.DateTime TimeOutField;
        
        private string TreatmentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AP {
            get {
                return this.APField;
            }
            set {
                if ((object.ReferenceEquals(this.APField, value) != true)) {
                    this.APField = value;
                    this.RaisePropertyChanged("AP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AilmentDetailRowKey {
            get {
                return this.AilmentDetailRowKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.AilmentDetailRowKeyField, value) != true)) {
                    this.AilmentDetailRowKeyField = value;
                    this.RaisePropertyChanged("AilmentDetailRowKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Diagnosis {
            get {
                return this.DiagnosisField;
            }
            set {
                if ((object.ReferenceEquals(this.DiagnosisField, value) != true)) {
                    this.DiagnosisField = value;
                    this.RaisePropertyChanged("Diagnosis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GP {
            get {
                return this.GPField;
            }
            set {
                if ((object.ReferenceEquals(this.GPField, value) != true)) {
                    this.GPField = value;
                    this.RaisePropertyChanged("GP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Hospital {
            get {
                return this.HospitalField;
            }
            set {
                if ((object.ReferenceEquals(this.HospitalField, value) != true)) {
                    this.HospitalField = value;
                    this.RaisePropertyChanged("Hospital");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lab_Pathology {
            get {
                return this.Lab_PathologyField;
            }
            set {
                if ((object.ReferenceEquals(this.Lab_PathologyField, value) != true)) {
                    this.Lab_PathologyField = value;
                    this.RaisePropertyChanged("Lab_Pathology");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lab_Physical {
            get {
                return this.Lab_PhysicalField;
            }
            set {
                if ((object.ReferenceEquals(this.Lab_PhysicalField, value) != true)) {
                    this.Lab_PhysicalField = value;
                    this.RaisePropertyChanged("Lab_Physical");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lab_Radiology {
            get {
                return this.Lab_RadiologyField;
            }
            set {
                if ((object.ReferenceEquals(this.Lab_RadiologyField, value) != true)) {
                    this.Lab_RadiologyField = value;
                    this.RaisePropertyChanged("Lab_Radiology");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Medication {
            get {
                return this.MedicationField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicationField, value) != true)) {
                    this.MedicationField = value;
                    this.RaisePropertyChanged("Medication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PatientIDLinkRowKey {
            get {
                return this.PatientIDLinkRowKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PatientIDLinkRowKeyField, value) != true)) {
                    this.PatientIDLinkRowKeyField = value;
                    this.RaisePropertyChanged("PatientIDLinkRowKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgressNotes {
            get {
                return this.ProgressNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgressNotesField, value) != true)) {
                    this.ProgressNotesField = value;
                    this.RaisePropertyChanged("ProgressNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symptoms {
            get {
                return this.SymptomsField;
            }
            set {
                if ((object.ReferenceEquals(this.SymptomsField, value) != true)) {
                    this.SymptomsField = value;
                    this.RaisePropertyChanged("Symptoms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeIn {
            get {
                return this.TimeInField;
            }
            set {
                if ((this.TimeInField.Equals(value) != true)) {
                    this.TimeInField = value;
                    this.RaisePropertyChanged("TimeIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TimeOut {
            get {
                return this.TimeOutField;
            }
            set {
                if ((this.TimeOutField.Equals(value) != true)) {
                    this.TimeOutField = value;
                    this.RaisePropertyChanged("TimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Treatment {
            get {
                return this.TreatmentField;
            }
            set {
                if ((object.ReferenceEquals(this.TreatmentField, value) != true)) {
                    this.TreatmentField = value;
                    this.RaisePropertyChanged("Treatment");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicDetails", Namespace="http://schemas.datacontract.org/2004/07/CloudScrubsStorage")]
    public partial class BasicDetails : CloudScrubsMobile.CS_Reference.TableServiceEntity {
        
        private string AddressField;
        
        private System.DateTime DOBField;
        
        private string GenderField;
        
        private string LegalStatusField;
        
        private string MedicalInsuranceField;
        
        private string NameField;
        
        private string NationalityField;
        
        private string NextOfKinField;
        
        private string PhoneNumberField;
        
        private string SSNField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LegalStatus {
            get {
                return this.LegalStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.LegalStatusField, value) != true)) {
                    this.LegalStatusField = value;
                    this.RaisePropertyChanged("LegalStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MedicalInsurance {
            get {
                return this.MedicalInsuranceField;
            }
            set {
                if ((object.ReferenceEquals(this.MedicalInsuranceField, value) != true)) {
                    this.MedicalInsuranceField = value;
                    this.RaisePropertyChanged("MedicalInsurance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NextOfKin {
            get {
                return this.NextOfKinField;
            }
            set {
                if ((object.ReferenceEquals(this.NextOfKinField, value) != true)) {
                    this.NextOfKinField = value;
                    this.RaisePropertyChanged("NextOfKin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SSN {
            get {
                return this.SSNField;
            }
            set {
                if ((object.ReferenceEquals(this.SSNField, value) != true)) {
                    this.SSNField = value;
                    this.RaisePropertyChanged("SSN");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CS_Reference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(CloudScrubsMobile.CS_Reference.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        CloudScrubsMobile.CS_Reference.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddPatientData", ReplyAction="http://tempuri.org/IService1/AddPatientDataResponse")]
        System.IAsyncResult BeginAddPatientData(CloudScrubsMobile.CS_Reference.BasicDetails PatientData, System.AsyncCallback callback, object asyncState);
        
        void EndAddPatientData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddGeneralHistoryData", ReplyAction="http://tempuri.org/IService1/AddGeneralHistoryDataResponse")]
        System.IAsyncResult BeginAddGeneralHistoryData(CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData, System.AsyncCallback callback, object asyncState);
        
        void EndAddGeneralHistoryData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/SeePatientData", ReplyAction="http://tempuri.org/IService1/SeePatientDataResponse")]
        System.IAsyncResult BeginSeePatientData(string str, System.AsyncCallback callback, object asyncState);
        
        CloudScrubsMobile.CS_Reference.BasicDetails EndSeePatientData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UpdateBasicDetails", ReplyAction="http://tempuri.org/IService1/UpdateBasicDetailsResponse")]
        System.IAsyncResult BeginUpdateBasicDetails(string str, CloudScrubsMobile.CS_Reference.BasicDetails PatientData, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateBasicDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/SeeGeneralHistoryData", ReplyAction="http://tempuri.org/IService1/SeeGeneralHistoryDataResponse")]
        System.IAsyncResult BeginSeeGeneralHistoryData(string str, System.AsyncCallback callback, object asyncState);
        
        CloudScrubsMobile.CS_Reference.GeneralHistory EndSeeGeneralHistoryData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UpdateGeneralHistory", ReplyAction="http://tempuri.org/IService1/UpdateGeneralHistoryResponse")]
        System.IAsyncResult BeginUpdateGeneralHistory(string str, CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateGeneralHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/AddAilmentDetails", ReplyAction="http://tempuri.org/IService1/AddAilmentDetailsResponse")]
        System.IAsyncResult BeginAddAilmentDetails(CloudScrubsMobile.CS_Reference.AilmentDetails AilData, System.AsyncCallback callback, object asyncState);
        
        void EndAddAilmentDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/SeeAilmentDetailsData", ReplyAction="http://tempuri.org/IService1/SeeAilmentDetailsDataResponse")]
        System.IAsyncResult BeginSeeAilmentDetailsData(string str, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.Collection<CloudScrubsMobile.CS_Reference.AilmentDetails> EndSeeAilmentDetailsData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/SeeSpecificAilmentDetailsData", ReplyAction="http://tempuri.org/IService1/SeeSpecificAilmentDetailsDataResponse")]
        System.IAsyncResult BeginSeeSpecificAilmentDetailsData(string ssn, string rowkey, System.AsyncCallback callback, object asyncState);
        
        CloudScrubsMobile.CS_Reference.AilmentDetails EndSeeSpecificAilmentDetailsData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/UpdateSpecificAilmentsData", ReplyAction="http://tempuri.org/IService1/UpdateSpecificAilmentsDataResponse")]
        System.IAsyncResult BeginUpdateSpecificAilmentsData(string ssn, string rowkey, CloudScrubsMobile.CS_Reference.AilmentDetails AilData, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateSpecificAilmentsData(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CloudScrubsMobile.CS_Reference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CloudScrubsMobile.CS_Reference.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CloudScrubsMobile.CS_Reference.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SeePatientDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SeePatientDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CloudScrubsMobile.CS_Reference.BasicDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CloudScrubsMobile.CS_Reference.BasicDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SeeGeneralHistoryDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SeeGeneralHistoryDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CloudScrubsMobile.CS_Reference.GeneralHistory Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CloudScrubsMobile.CS_Reference.GeneralHistory)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SeeAilmentDetailsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SeeAilmentDetailsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.Collection<CloudScrubsMobile.CS_Reference.AilmentDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.Collection<CloudScrubsMobile.CS_Reference.AilmentDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SeeSpecificAilmentDetailsDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SeeSpecificAilmentDetailsDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public CloudScrubsMobile.CS_Reference.AilmentDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((CloudScrubsMobile.CS_Reference.AilmentDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CloudScrubsMobile.CS_Reference.IService1>, CloudScrubsMobile.CS_Reference.IService1 {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddPatientDataDelegate;
        
        private EndOperationDelegate onEndAddPatientDataDelegate;
        
        private System.Threading.SendOrPostCallback onAddPatientDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddGeneralHistoryDataDelegate;
        
        private EndOperationDelegate onEndAddGeneralHistoryDataDelegate;
        
        private System.Threading.SendOrPostCallback onAddGeneralHistoryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSeePatientDataDelegate;
        
        private EndOperationDelegate onEndSeePatientDataDelegate;
        
        private System.Threading.SendOrPostCallback onSeePatientDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateBasicDetailsDelegate;
        
        private EndOperationDelegate onEndUpdateBasicDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateBasicDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSeeGeneralHistoryDataDelegate;
        
        private EndOperationDelegate onEndSeeGeneralHistoryDataDelegate;
        
        private System.Threading.SendOrPostCallback onSeeGeneralHistoryDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateGeneralHistoryDelegate;
        
        private EndOperationDelegate onEndUpdateGeneralHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateGeneralHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAilmentDetailsDelegate;
        
        private EndOperationDelegate onEndAddAilmentDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onAddAilmentDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSeeAilmentDetailsDataDelegate;
        
        private EndOperationDelegate onEndSeeAilmentDetailsDataDelegate;
        
        private System.Threading.SendOrPostCallback onSeeAilmentDetailsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginSeeSpecificAilmentDetailsDataDelegate;
        
        private EndOperationDelegate onEndSeeSpecificAilmentDetailsDataDelegate;
        
        private System.Threading.SendOrPostCallback onSeeSpecificAilmentDetailsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSpecificAilmentsDataDelegate;
        
        private EndOperationDelegate onEndUpdateSpecificAilmentsDataDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSpecificAilmentsDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddPatientDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddGeneralHistoryDataCompleted;
        
        public event System.EventHandler<SeePatientDataCompletedEventArgs> SeePatientDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateBasicDetailsCompleted;
        
        public event System.EventHandler<SeeGeneralHistoryDataCompletedEventArgs> SeeGeneralHistoryDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateGeneralHistoryCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddAilmentDetailsCompleted;
        
        public event System.EventHandler<SeeAilmentDetailsDataCompletedEventArgs> SeeAilmentDetailsDataCompleted;
        
        public event System.EventHandler<SeeSpecificAilmentDetailsDataCompletedEventArgs> SeeSpecificAilmentDetailsDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateSpecificAilmentsDataCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string CloudScrubsMobile.CS_Reference.IService1.EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginGetDataUsingDataContract(CloudScrubsMobile.CS_Reference.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CloudScrubsMobile.CS_Reference.CompositeType CloudScrubsMobile.CS_Reference.IService1.EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CloudScrubsMobile.CS_Reference.CompositeType composite = ((CloudScrubsMobile.CS_Reference.CompositeType)(inValues[0]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            CloudScrubsMobile.CS_Reference.CompositeType retVal = ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(CloudScrubsMobile.CS_Reference.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(CloudScrubsMobile.CS_Reference.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginAddPatientData(CloudScrubsMobile.CS_Reference.BasicDetails PatientData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddPatientData(PatientData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudScrubsMobile.CS_Reference.IService1.EndAddPatientData(System.IAsyncResult result) {
            base.Channel.EndAddPatientData(result);
        }
        
        private System.IAsyncResult OnBeginAddPatientData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CloudScrubsMobile.CS_Reference.BasicDetails PatientData = ((CloudScrubsMobile.CS_Reference.BasicDetails)(inValues[0]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginAddPatientData(PatientData, callback, asyncState);
        }
        
        private object[] OnEndAddPatientData(System.IAsyncResult result) {
            ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndAddPatientData(result);
            return null;
        }
        
        private void OnAddPatientDataCompleted(object state) {
            if ((this.AddPatientDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddPatientDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddPatientDataAsync(CloudScrubsMobile.CS_Reference.BasicDetails PatientData) {
            this.AddPatientDataAsync(PatientData, null);
        }
        
        public void AddPatientDataAsync(CloudScrubsMobile.CS_Reference.BasicDetails PatientData, object userState) {
            if ((this.onBeginAddPatientDataDelegate == null)) {
                this.onBeginAddPatientDataDelegate = new BeginOperationDelegate(this.OnBeginAddPatientData);
            }
            if ((this.onEndAddPatientDataDelegate == null)) {
                this.onEndAddPatientDataDelegate = new EndOperationDelegate(this.OnEndAddPatientData);
            }
            if ((this.onAddPatientDataCompletedDelegate == null)) {
                this.onAddPatientDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddPatientDataCompleted);
            }
            base.InvokeAsync(this.onBeginAddPatientDataDelegate, new object[] {
                        PatientData}, this.onEndAddPatientDataDelegate, this.onAddPatientDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginAddGeneralHistoryData(CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddGeneralHistoryData(GenHistData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudScrubsMobile.CS_Reference.IService1.EndAddGeneralHistoryData(System.IAsyncResult result) {
            base.Channel.EndAddGeneralHistoryData(result);
        }
        
        private System.IAsyncResult OnBeginAddGeneralHistoryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData = ((CloudScrubsMobile.CS_Reference.GeneralHistory)(inValues[0]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginAddGeneralHistoryData(GenHistData, callback, asyncState);
        }
        
        private object[] OnEndAddGeneralHistoryData(System.IAsyncResult result) {
            ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndAddGeneralHistoryData(result);
            return null;
        }
        
        private void OnAddGeneralHistoryDataCompleted(object state) {
            if ((this.AddGeneralHistoryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddGeneralHistoryDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddGeneralHistoryDataAsync(CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData) {
            this.AddGeneralHistoryDataAsync(GenHistData, null);
        }
        
        public void AddGeneralHistoryDataAsync(CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData, object userState) {
            if ((this.onBeginAddGeneralHistoryDataDelegate == null)) {
                this.onBeginAddGeneralHistoryDataDelegate = new BeginOperationDelegate(this.OnBeginAddGeneralHistoryData);
            }
            if ((this.onEndAddGeneralHistoryDataDelegate == null)) {
                this.onEndAddGeneralHistoryDataDelegate = new EndOperationDelegate(this.OnEndAddGeneralHistoryData);
            }
            if ((this.onAddGeneralHistoryDataCompletedDelegate == null)) {
                this.onAddGeneralHistoryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddGeneralHistoryDataCompleted);
            }
            base.InvokeAsync(this.onBeginAddGeneralHistoryDataDelegate, new object[] {
                        GenHistData}, this.onEndAddGeneralHistoryDataDelegate, this.onAddGeneralHistoryDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginSeePatientData(string str, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSeePatientData(str, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CloudScrubsMobile.CS_Reference.BasicDetails CloudScrubsMobile.CS_Reference.IService1.EndSeePatientData(System.IAsyncResult result) {
            return base.Channel.EndSeePatientData(result);
        }
        
        private System.IAsyncResult OnBeginSeePatientData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string str = ((string)(inValues[0]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginSeePatientData(str, callback, asyncState);
        }
        
        private object[] OnEndSeePatientData(System.IAsyncResult result) {
            CloudScrubsMobile.CS_Reference.BasicDetails retVal = ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndSeePatientData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSeePatientDataCompleted(object state) {
            if ((this.SeePatientDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SeePatientDataCompleted(this, new SeePatientDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SeePatientDataAsync(string str) {
            this.SeePatientDataAsync(str, null);
        }
        
        public void SeePatientDataAsync(string str, object userState) {
            if ((this.onBeginSeePatientDataDelegate == null)) {
                this.onBeginSeePatientDataDelegate = new BeginOperationDelegate(this.OnBeginSeePatientData);
            }
            if ((this.onEndSeePatientDataDelegate == null)) {
                this.onEndSeePatientDataDelegate = new EndOperationDelegate(this.OnEndSeePatientData);
            }
            if ((this.onSeePatientDataCompletedDelegate == null)) {
                this.onSeePatientDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSeePatientDataCompleted);
            }
            base.InvokeAsync(this.onBeginSeePatientDataDelegate, new object[] {
                        str}, this.onEndSeePatientDataDelegate, this.onSeePatientDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginUpdateBasicDetails(string str, CloudScrubsMobile.CS_Reference.BasicDetails PatientData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateBasicDetails(str, PatientData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudScrubsMobile.CS_Reference.IService1.EndUpdateBasicDetails(System.IAsyncResult result) {
            base.Channel.EndUpdateBasicDetails(result);
        }
        
        private System.IAsyncResult OnBeginUpdateBasicDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string str = ((string)(inValues[0]));
            CloudScrubsMobile.CS_Reference.BasicDetails PatientData = ((CloudScrubsMobile.CS_Reference.BasicDetails)(inValues[1]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginUpdateBasicDetails(str, PatientData, callback, asyncState);
        }
        
        private object[] OnEndUpdateBasicDetails(System.IAsyncResult result) {
            ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndUpdateBasicDetails(result);
            return null;
        }
        
        private void OnUpdateBasicDetailsCompleted(object state) {
            if ((this.UpdateBasicDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBasicDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateBasicDetailsAsync(string str, CloudScrubsMobile.CS_Reference.BasicDetails PatientData) {
            this.UpdateBasicDetailsAsync(str, PatientData, null);
        }
        
        public void UpdateBasicDetailsAsync(string str, CloudScrubsMobile.CS_Reference.BasicDetails PatientData, object userState) {
            if ((this.onBeginUpdateBasicDetailsDelegate == null)) {
                this.onBeginUpdateBasicDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdateBasicDetails);
            }
            if ((this.onEndUpdateBasicDetailsDelegate == null)) {
                this.onEndUpdateBasicDetailsDelegate = new EndOperationDelegate(this.OnEndUpdateBasicDetails);
            }
            if ((this.onUpdateBasicDetailsCompletedDelegate == null)) {
                this.onUpdateBasicDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBasicDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBasicDetailsDelegate, new object[] {
                        str,
                        PatientData}, this.onEndUpdateBasicDetailsDelegate, this.onUpdateBasicDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginSeeGeneralHistoryData(string str, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSeeGeneralHistoryData(str, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CloudScrubsMobile.CS_Reference.GeneralHistory CloudScrubsMobile.CS_Reference.IService1.EndSeeGeneralHistoryData(System.IAsyncResult result) {
            return base.Channel.EndSeeGeneralHistoryData(result);
        }
        
        private System.IAsyncResult OnBeginSeeGeneralHistoryData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string str = ((string)(inValues[0]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginSeeGeneralHistoryData(str, callback, asyncState);
        }
        
        private object[] OnEndSeeGeneralHistoryData(System.IAsyncResult result) {
            CloudScrubsMobile.CS_Reference.GeneralHistory retVal = ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndSeeGeneralHistoryData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSeeGeneralHistoryDataCompleted(object state) {
            if ((this.SeeGeneralHistoryDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SeeGeneralHistoryDataCompleted(this, new SeeGeneralHistoryDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SeeGeneralHistoryDataAsync(string str) {
            this.SeeGeneralHistoryDataAsync(str, null);
        }
        
        public void SeeGeneralHistoryDataAsync(string str, object userState) {
            if ((this.onBeginSeeGeneralHistoryDataDelegate == null)) {
                this.onBeginSeeGeneralHistoryDataDelegate = new BeginOperationDelegate(this.OnBeginSeeGeneralHistoryData);
            }
            if ((this.onEndSeeGeneralHistoryDataDelegate == null)) {
                this.onEndSeeGeneralHistoryDataDelegate = new EndOperationDelegate(this.OnEndSeeGeneralHistoryData);
            }
            if ((this.onSeeGeneralHistoryDataCompletedDelegate == null)) {
                this.onSeeGeneralHistoryDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSeeGeneralHistoryDataCompleted);
            }
            base.InvokeAsync(this.onBeginSeeGeneralHistoryDataDelegate, new object[] {
                        str}, this.onEndSeeGeneralHistoryDataDelegate, this.onSeeGeneralHistoryDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginUpdateGeneralHistory(string str, CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateGeneralHistory(str, GenHistData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudScrubsMobile.CS_Reference.IService1.EndUpdateGeneralHistory(System.IAsyncResult result) {
            base.Channel.EndUpdateGeneralHistory(result);
        }
        
        private System.IAsyncResult OnBeginUpdateGeneralHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string str = ((string)(inValues[0]));
            CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData = ((CloudScrubsMobile.CS_Reference.GeneralHistory)(inValues[1]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginUpdateGeneralHistory(str, GenHistData, callback, asyncState);
        }
        
        private object[] OnEndUpdateGeneralHistory(System.IAsyncResult result) {
            ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndUpdateGeneralHistory(result);
            return null;
        }
        
        private void OnUpdateGeneralHistoryCompleted(object state) {
            if ((this.UpdateGeneralHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateGeneralHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateGeneralHistoryAsync(string str, CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData) {
            this.UpdateGeneralHistoryAsync(str, GenHistData, null);
        }
        
        public void UpdateGeneralHistoryAsync(string str, CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData, object userState) {
            if ((this.onBeginUpdateGeneralHistoryDelegate == null)) {
                this.onBeginUpdateGeneralHistoryDelegate = new BeginOperationDelegate(this.OnBeginUpdateGeneralHistory);
            }
            if ((this.onEndUpdateGeneralHistoryDelegate == null)) {
                this.onEndUpdateGeneralHistoryDelegate = new EndOperationDelegate(this.OnEndUpdateGeneralHistory);
            }
            if ((this.onUpdateGeneralHistoryCompletedDelegate == null)) {
                this.onUpdateGeneralHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateGeneralHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateGeneralHistoryDelegate, new object[] {
                        str,
                        GenHistData}, this.onEndUpdateGeneralHistoryDelegate, this.onUpdateGeneralHistoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginAddAilmentDetails(CloudScrubsMobile.CS_Reference.AilmentDetails AilData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAilmentDetails(AilData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudScrubsMobile.CS_Reference.IService1.EndAddAilmentDetails(System.IAsyncResult result) {
            base.Channel.EndAddAilmentDetails(result);
        }
        
        private System.IAsyncResult OnBeginAddAilmentDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            CloudScrubsMobile.CS_Reference.AilmentDetails AilData = ((CloudScrubsMobile.CS_Reference.AilmentDetails)(inValues[0]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginAddAilmentDetails(AilData, callback, asyncState);
        }
        
        private object[] OnEndAddAilmentDetails(System.IAsyncResult result) {
            ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndAddAilmentDetails(result);
            return null;
        }
        
        private void OnAddAilmentDetailsCompleted(object state) {
            if ((this.AddAilmentDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAilmentDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAilmentDetailsAsync(CloudScrubsMobile.CS_Reference.AilmentDetails AilData) {
            this.AddAilmentDetailsAsync(AilData, null);
        }
        
        public void AddAilmentDetailsAsync(CloudScrubsMobile.CS_Reference.AilmentDetails AilData, object userState) {
            if ((this.onBeginAddAilmentDetailsDelegate == null)) {
                this.onBeginAddAilmentDetailsDelegate = new BeginOperationDelegate(this.OnBeginAddAilmentDetails);
            }
            if ((this.onEndAddAilmentDetailsDelegate == null)) {
                this.onEndAddAilmentDetailsDelegate = new EndOperationDelegate(this.OnEndAddAilmentDetails);
            }
            if ((this.onAddAilmentDetailsCompletedDelegate == null)) {
                this.onAddAilmentDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAilmentDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginAddAilmentDetailsDelegate, new object[] {
                        AilData}, this.onEndAddAilmentDetailsDelegate, this.onAddAilmentDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginSeeAilmentDetailsData(string str, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSeeAilmentDetailsData(str, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.Collection<CloudScrubsMobile.CS_Reference.AilmentDetails> CloudScrubsMobile.CS_Reference.IService1.EndSeeAilmentDetailsData(System.IAsyncResult result) {
            return base.Channel.EndSeeAilmentDetailsData(result);
        }
        
        private System.IAsyncResult OnBeginSeeAilmentDetailsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string str = ((string)(inValues[0]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginSeeAilmentDetailsData(str, callback, asyncState);
        }
        
        private object[] OnEndSeeAilmentDetailsData(System.IAsyncResult result) {
            System.Collections.ObjectModel.Collection<CloudScrubsMobile.CS_Reference.AilmentDetails> retVal = ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndSeeAilmentDetailsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSeeAilmentDetailsDataCompleted(object state) {
            if ((this.SeeAilmentDetailsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SeeAilmentDetailsDataCompleted(this, new SeeAilmentDetailsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SeeAilmentDetailsDataAsync(string str) {
            this.SeeAilmentDetailsDataAsync(str, null);
        }
        
        public void SeeAilmentDetailsDataAsync(string str, object userState) {
            if ((this.onBeginSeeAilmentDetailsDataDelegate == null)) {
                this.onBeginSeeAilmentDetailsDataDelegate = new BeginOperationDelegate(this.OnBeginSeeAilmentDetailsData);
            }
            if ((this.onEndSeeAilmentDetailsDataDelegate == null)) {
                this.onEndSeeAilmentDetailsDataDelegate = new EndOperationDelegate(this.OnEndSeeAilmentDetailsData);
            }
            if ((this.onSeeAilmentDetailsDataCompletedDelegate == null)) {
                this.onSeeAilmentDetailsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSeeAilmentDetailsDataCompleted);
            }
            base.InvokeAsync(this.onBeginSeeAilmentDetailsDataDelegate, new object[] {
                        str}, this.onEndSeeAilmentDetailsDataDelegate, this.onSeeAilmentDetailsDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginSeeSpecificAilmentDetailsData(string ssn, string rowkey, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSeeSpecificAilmentDetailsData(ssn, rowkey, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CloudScrubsMobile.CS_Reference.AilmentDetails CloudScrubsMobile.CS_Reference.IService1.EndSeeSpecificAilmentDetailsData(System.IAsyncResult result) {
            return base.Channel.EndSeeSpecificAilmentDetailsData(result);
        }
        
        private System.IAsyncResult OnBeginSeeSpecificAilmentDetailsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ssn = ((string)(inValues[0]));
            string rowkey = ((string)(inValues[1]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginSeeSpecificAilmentDetailsData(ssn, rowkey, callback, asyncState);
        }
        
        private object[] OnEndSeeSpecificAilmentDetailsData(System.IAsyncResult result) {
            CloudScrubsMobile.CS_Reference.AilmentDetails retVal = ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndSeeSpecificAilmentDetailsData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSeeSpecificAilmentDetailsDataCompleted(object state) {
            if ((this.SeeSpecificAilmentDetailsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SeeSpecificAilmentDetailsDataCompleted(this, new SeeSpecificAilmentDetailsDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SeeSpecificAilmentDetailsDataAsync(string ssn, string rowkey) {
            this.SeeSpecificAilmentDetailsDataAsync(ssn, rowkey, null);
        }
        
        public void SeeSpecificAilmentDetailsDataAsync(string ssn, string rowkey, object userState) {
            if ((this.onBeginSeeSpecificAilmentDetailsDataDelegate == null)) {
                this.onBeginSeeSpecificAilmentDetailsDataDelegate = new BeginOperationDelegate(this.OnBeginSeeSpecificAilmentDetailsData);
            }
            if ((this.onEndSeeSpecificAilmentDetailsDataDelegate == null)) {
                this.onEndSeeSpecificAilmentDetailsDataDelegate = new EndOperationDelegate(this.OnEndSeeSpecificAilmentDetailsData);
            }
            if ((this.onSeeSpecificAilmentDetailsDataCompletedDelegate == null)) {
                this.onSeeSpecificAilmentDetailsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSeeSpecificAilmentDetailsDataCompleted);
            }
            base.InvokeAsync(this.onBeginSeeSpecificAilmentDetailsDataDelegate, new object[] {
                        ssn,
                        rowkey}, this.onEndSeeSpecificAilmentDetailsDataDelegate, this.onSeeSpecificAilmentDetailsDataCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult CloudScrubsMobile.CS_Reference.IService1.BeginUpdateSpecificAilmentsData(string ssn, string rowkey, CloudScrubsMobile.CS_Reference.AilmentDetails AilData, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSpecificAilmentsData(ssn, rowkey, AilData, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void CloudScrubsMobile.CS_Reference.IService1.EndUpdateSpecificAilmentsData(System.IAsyncResult result) {
            base.Channel.EndUpdateSpecificAilmentsData(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSpecificAilmentsData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ssn = ((string)(inValues[0]));
            string rowkey = ((string)(inValues[1]));
            CloudScrubsMobile.CS_Reference.AilmentDetails AilData = ((CloudScrubsMobile.CS_Reference.AilmentDetails)(inValues[2]));
            return ((CloudScrubsMobile.CS_Reference.IService1)(this)).BeginUpdateSpecificAilmentsData(ssn, rowkey, AilData, callback, asyncState);
        }
        
        private object[] OnEndUpdateSpecificAilmentsData(System.IAsyncResult result) {
            ((CloudScrubsMobile.CS_Reference.IService1)(this)).EndUpdateSpecificAilmentsData(result);
            return null;
        }
        
        private void OnUpdateSpecificAilmentsDataCompleted(object state) {
            if ((this.UpdateSpecificAilmentsDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSpecificAilmentsDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSpecificAilmentsDataAsync(string ssn, string rowkey, CloudScrubsMobile.CS_Reference.AilmentDetails AilData) {
            this.UpdateSpecificAilmentsDataAsync(ssn, rowkey, AilData, null);
        }
        
        public void UpdateSpecificAilmentsDataAsync(string ssn, string rowkey, CloudScrubsMobile.CS_Reference.AilmentDetails AilData, object userState) {
            if ((this.onBeginUpdateSpecificAilmentsDataDelegate == null)) {
                this.onBeginUpdateSpecificAilmentsDataDelegate = new BeginOperationDelegate(this.OnBeginUpdateSpecificAilmentsData);
            }
            if ((this.onEndUpdateSpecificAilmentsDataDelegate == null)) {
                this.onEndUpdateSpecificAilmentsDataDelegate = new EndOperationDelegate(this.OnEndUpdateSpecificAilmentsData);
            }
            if ((this.onUpdateSpecificAilmentsDataCompletedDelegate == null)) {
                this.onUpdateSpecificAilmentsDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSpecificAilmentsDataCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSpecificAilmentsDataDelegate, new object[] {
                        ssn,
                        rowkey,
                        AilData}, this.onEndUpdateSpecificAilmentsDataDelegate, this.onUpdateSpecificAilmentsDataCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override CloudScrubsMobile.CS_Reference.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<CloudScrubsMobile.CS_Reference.IService1>, CloudScrubsMobile.CS_Reference.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<CloudScrubsMobile.CS_Reference.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = value;
                System.IAsyncResult _result = base.BeginInvoke("GetData", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetData(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDataUsingDataContract(CloudScrubsMobile.CS_Reference.CompositeType composite, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = composite;
                System.IAsyncResult _result = base.BeginInvoke("GetDataUsingDataContract", _args, callback, asyncState);
                return _result;
            }
            
            public CloudScrubsMobile.CS_Reference.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                CloudScrubsMobile.CS_Reference.CompositeType _result = ((CloudScrubsMobile.CS_Reference.CompositeType)(base.EndInvoke("GetDataUsingDataContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddPatientData(CloudScrubsMobile.CS_Reference.BasicDetails PatientData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = PatientData;
                System.IAsyncResult _result = base.BeginInvoke("AddPatientData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddPatientData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddPatientData", _args, result);
            }
            
            public System.IAsyncResult BeginAddGeneralHistoryData(CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = GenHistData;
                System.IAsyncResult _result = base.BeginInvoke("AddGeneralHistoryData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddGeneralHistoryData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddGeneralHistoryData", _args, result);
            }
            
            public System.IAsyncResult BeginSeePatientData(string str, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = str;
                System.IAsyncResult _result = base.BeginInvoke("SeePatientData", _args, callback, asyncState);
                return _result;
            }
            
            public CloudScrubsMobile.CS_Reference.BasicDetails EndSeePatientData(System.IAsyncResult result) {
                object[] _args = new object[0];
                CloudScrubsMobile.CS_Reference.BasicDetails _result = ((CloudScrubsMobile.CS_Reference.BasicDetails)(base.EndInvoke("SeePatientData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateBasicDetails(string str, CloudScrubsMobile.CS_Reference.BasicDetails PatientData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = str;
                _args[1] = PatientData;
                System.IAsyncResult _result = base.BeginInvoke("UpdateBasicDetails", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateBasicDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateBasicDetails", _args, result);
            }
            
            public System.IAsyncResult BeginSeeGeneralHistoryData(string str, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = str;
                System.IAsyncResult _result = base.BeginInvoke("SeeGeneralHistoryData", _args, callback, asyncState);
                return _result;
            }
            
            public CloudScrubsMobile.CS_Reference.GeneralHistory EndSeeGeneralHistoryData(System.IAsyncResult result) {
                object[] _args = new object[0];
                CloudScrubsMobile.CS_Reference.GeneralHistory _result = ((CloudScrubsMobile.CS_Reference.GeneralHistory)(base.EndInvoke("SeeGeneralHistoryData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateGeneralHistory(string str, CloudScrubsMobile.CS_Reference.GeneralHistory GenHistData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = str;
                _args[1] = GenHistData;
                System.IAsyncResult _result = base.BeginInvoke("UpdateGeneralHistory", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateGeneralHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateGeneralHistory", _args, result);
            }
            
            public System.IAsyncResult BeginAddAilmentDetails(CloudScrubsMobile.CS_Reference.AilmentDetails AilData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = AilData;
                System.IAsyncResult _result = base.BeginInvoke("AddAilmentDetails", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddAilmentDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddAilmentDetails", _args, result);
            }
            
            public System.IAsyncResult BeginSeeAilmentDetailsData(string str, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = str;
                System.IAsyncResult _result = base.BeginInvoke("SeeAilmentDetailsData", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.Collection<CloudScrubsMobile.CS_Reference.AilmentDetails> EndSeeAilmentDetailsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.Collection<CloudScrubsMobile.CS_Reference.AilmentDetails> _result = ((System.Collections.ObjectModel.Collection<CloudScrubsMobile.CS_Reference.AilmentDetails>)(base.EndInvoke("SeeAilmentDetailsData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSeeSpecificAilmentDetailsData(string ssn, string rowkey, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = ssn;
                _args[1] = rowkey;
                System.IAsyncResult _result = base.BeginInvoke("SeeSpecificAilmentDetailsData", _args, callback, asyncState);
                return _result;
            }
            
            public CloudScrubsMobile.CS_Reference.AilmentDetails EndSeeSpecificAilmentDetailsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                CloudScrubsMobile.CS_Reference.AilmentDetails _result = ((CloudScrubsMobile.CS_Reference.AilmentDetails)(base.EndInvoke("SeeSpecificAilmentDetailsData", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateSpecificAilmentsData(string ssn, string rowkey, CloudScrubsMobile.CS_Reference.AilmentDetails AilData, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = ssn;
                _args[1] = rowkey;
                _args[2] = AilData;
                System.IAsyncResult _result = base.BeginInvoke("UpdateSpecificAilmentsData", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateSpecificAilmentsData(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateSpecificAilmentsData", _args, result);
            }
        }
    }
}
